// ChinaTech 手机维修订单管理系统 - Prisma Schema
// 支持多语言、多用户角色的完整维修管理系统

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户表 - NextAuth.js 兼容
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String?
  name          String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  accounts  Account[]
  sessions  Session[]
  profile   Profile?
  
  @@map("users")
}

// NextAuth.js Account表
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

// NextAuth.js Session表
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

// NextAuth.js VerificationToken表
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// 用户配置表
model Profile {
  id          String    @id @default(cuid())
  userId      String    @unique
  role        UserRole  @default(CUSTOMER)
  fullName    String?
  phone       String?
  avatarUrl   String?
  language    Language  @default(ITALIAN)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  technician  Technician?
  
  @@map("profiles")
}

// 客户表
model Customer {
  id        String   @id @default(cuid())
  name      String
  phone     String
  email     String?
  address   String?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  orders    Order[]
  
  @@map("customers")
}

// 技术员表
model Technician {
  id                 String    @id @default(cuid())
  profileId          String    @unique
  specialization     String?
  isAvailable        Boolean   @default(true)
  currentOrdersCount Int       @default(0)
  maxOrdersLimit     Int       @default(10)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  // Relations
  profile            Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)
  orders             Order[]
  
  @@map("technicians")
}

// 维修设备型号表
model RepairDevice {
  id               String   @id @default(cuid())
  brand            String
  model            String
  category         DeviceCategory @default(SMARTPHONE)
  commonIssues     String[]
  baseRepairPrice  Decimal  @default(0) @db.Decimal(10,2)
  createdAt        DateTime @default(now())

  // Relations
  orders           Order[]
  
  @@unique([brand, model])
  @@map("repair_devices")
}

// 订单表
model Order {
  id                    String      @id @default(cuid())
  orderNumber           String      @unique
  customerId            String
  technicianId          String?
  deviceId              String?
  deviceBrand           String
  deviceModel           String
  deviceImei            String?
  issueDescription      String
  status                OrderStatus @default(RECEIVED)
  estimatedCost         Decimal?    @db.Decimal(10,2)
  finalCost             Decimal?    @db.Decimal(10,2)
  estimatedCompletion   DateTime?
  actualCompletion      DateTime?
  priority              Priority    @default(NORMAL)
  notes                 String?
  customerContacted     Boolean     @default(false)
  whatsappNotifications Boolean     @default(true)
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt

  // Relations
  customer              Customer         @relation(fields: [customerId], references: [id])
  technician            Technician?      @relation(fields: [technicianId], references: [id])
  device                RepairDevice?    @relation(fields: [deviceId], references: [id])
  statusHistory         OrderStatusHistory[]
  usedParts             OrderPart[]
  
  @@map("orders")
}

// 订单状态历史表
model OrderStatusHistory {
  id          String      @id @default(cuid())
  orderId     String
  status      OrderStatus
  notes       String?
  changedBy   String?     // 操作员用户ID
  createdAt   DateTime    @default(now())

  // Relations
  order       Order       @relation(fields: [orderId], references: [id], onDelete: Cascade)
  
  @@map("order_status_history")
}

// 供应商表
model Supplier {
  id          String   @id @default(cuid())
  name        String
  contactPerson String?
  phone       String?
  email       String?
  address     String?
  notes       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  inventoryItems InventoryItem[]
  
  @@map("suppliers")
}

// 库存物品表
model InventoryItem {
  id              String   @id @default(cuid())
  name            String
  partNumber      String?
  category        String
  supplierId      String?
  quantity        Int      @default(0)
  minQuantity     Int      @default(5)
  unitPrice       Decimal  @db.Decimal(10,2)
  location        String?
  notes           String?
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  supplier        Supplier? @relation(fields: [supplierId], references: [id])
  orderParts      OrderPart[]
  
  @@map("inventory_items")
}

// 订单使用配件关联表
model OrderPart {
  id              String        @id @default(cuid())
  orderId         String
  inventoryItemId String
  quantity        Int
  unitPrice       Decimal       @db.Decimal(10,2)
  createdAt       DateTime      @default(now())

  // Relations
  order           Order         @relation(fields: [orderId], references: [id], onDelete: Cascade)
  inventoryItem   InventoryItem @relation(fields: [inventoryItemId], references: [id])
  
  @@map("order_parts")
}

// 枚举类型定义
enum UserRole {
  CUSTOMER
  TECHNICIAN
  ADMIN
}

enum Language {
  ITALIAN
  ENGLISH
  CHINESE
}

enum DeviceCategory {
  SMARTPHONE
  TABLET
  LAPTOP
  SMARTWATCH
  OTHER
}

enum OrderStatus {
  RECEIVED      // 已接收
  DIAGNOSING    // 检测中
  REPAIRING     // 维修中
  TESTING       // 测试中
  COMPLETED     // 完成
  READY_PICKUP  // 可取件
  DELIVERED     // 已交付
  CANCELLED     // 已取消
}

enum Priority {
  LOW
  NORMAL
  HIGH
  URGENT
}
